#version 300 es

precision mediump float;

uniform vec2 resolution;
uniform mediump float time;
out vec4 outColor;

float noise(vec2 pq)
{
    return fract(sin(pq.x* 124.3 + pq.y * 215.4) * 3244.44 );
}

float noiseSmooth(vec2 pq)
{
    vec2 index = floor(pq);
    vec2 frag = fract(pq);
    frag = smoothstep(0.0, 1.0, frag);
    
   
    float topLeft = noise(index);
    float topRight = noise(index + vec2(1,0));
    float top = mix(topLeft, topRight, frag.x);
    
    float bottomLeft = noise(index + vec2(0,1));
    float bottomRight = noise(index + vec2(1,1));
    float bottom = mix(bottomLeft, bottomRight, frag.x);
    
    
    return mix(top, bottom, frag.y);
}



void main(){
    vec2 uv = gl_FragCoord.xy / vec2(800,800);
    //uv.x *= resolution.x / resolution.y;
    uv.x += sin(time) * 5.;
    uv.y -= 0.7;


    vec3 sky = vec3(0.5, 0.7, 0.85);
    // Time varying pixel color
    vec3 col = vec3(noiseSmooth(uv*4.0)) * 0.5;
    col += vec3(noiseSmooth(uv*8.)) * 0.25;
    col += vec3(noiseSmooth(uv*16.)) * 0.125;
    col += vec3(noiseSmooth(uv*32.)) * 0.075;
    col += vec3(noiseSmooth(uv*64.)) * 0.0375;
    col /= 2.;
    col -= uv.y - 0.6;
    col = smoothstep(0.333, 0.9,col);
    // Output to screen
    
    col = mix(vec3(1.f), sky, col);
    outColor = vec4(col,1.0f);
}#version 300 es

layout (location = 0) in vec2 inPosition;

void main() {
    gl_Position = vec4(inPosition, 1.0, 1);
}
#version 300 es

precision mediump float;

flat in int fragColorIndex;

out vec4 outColor;

void main() { 
    if (fragColorIndex == 0) {
        outColor = vec4(1.0,0.843, 0.0, 1.0);
    }else if (fragColorIndex == 1) {
        outColor = vec4(1.0,0.439, 0.0, 1.0);
    }else if (fragColorIndex == 2) {
        outColor = vec4(1.0,1.0, 1.0, 1.0);
    }else if (fragColorIndex == 3) {
        outColor = vec4(0.0,0.0, 0.0, 1.0);
    }else if (fragColorIndex == 4) {
        outColor = vec4(0.0,0.0, 0.0, 1.0);
    }else {
        outColor = vec4(0.2, 0.2, 0.2, 1.0);
    }
}#version 300 es

layout (location = 0) in vec2 inPosition;
layout (location = 1) in int inColorIndex;

uniform float scale;
uniform bool flap;
uniform vec2 translation;

flat out int fragColorIndex;
void main() {
    vec2 newPosition = inPosition;
    if(flap == true && inColorIndex == 4) {
        if( inPosition == vec2(-0.52f,0.44f)) { //Z
            newPosition = vec2(-0.2f,-0.5f);
        }if( inPosition == vec2(-0.06,0.61f)) { //Z2
            newPosition = vec2(0.18f,-0.52f);
        }if( inPosition == vec2(-0.51f,0.19f)) { //W
            newPosition = vec2(-0.37f,-0.26f);
        }if( inPosition == vec2(-0.08f,0.23f)) { //V
            newPosition = vec2(-0.07f, 0.08f);
        }
    }
    newPosition = newPosition * scale + translation;
    gl_Position = vec4(newPosition, 0, 1);
    fragColorIndex= inColorIndex;
}#version 300 es

precision mediump float;

in vec4 fragColor;

out vec4 outColor;

void main() { outColor = fragColor; }#version 300 es

layout(location = 0) in vec2 inPosition;

uniform vec4 color;
uniform vec2 translation;

out vec4 fragColor;

void main() {
  vec2 newPosition = inPosition + translation;
  gl_Position = vec4(newPosition, 0, 1);
  fragColor = color;
}